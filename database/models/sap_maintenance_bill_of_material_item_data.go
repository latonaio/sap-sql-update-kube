// Code generated by SQLBoiler 4.8.4 (https://github.com/volatiletech/sqlboiler). DO NOT EDIT.
// This file is meant to be re-generated in place and/or deleted at any time.

package models

import (
	"context"
	"database/sql"
	"fmt"
	"reflect"
	"strconv"
	"strings"
	"sync"
	"time"

	"github.com/friendsofgo/errors"
	"github.com/volatiletech/null/v8"
	"github.com/volatiletech/sqlboiler/v4/boil"
	"github.com/volatiletech/sqlboiler/v4/queries"
	"github.com/volatiletech/sqlboiler/v4/queries/qm"
	"github.com/volatiletech/sqlboiler/v4/queries/qmhelper"
	"github.com/volatiletech/strmangle"
)

// SapMaintenanceBillOfMaterialItemDatum is an object representing the database table.
type SapMaintenanceBillOfMaterialItemDatum struct {
	BillOfMaterialItemUUID        string      `boil:"BillOfMaterialItemUUID" json:"BillOfMaterialItemUUID" toml:"BillOfMaterialItemUUID" yaml:"BillOfMaterialItemUUID"`
	TechnicalObject               null.String `boil:"TechnicalObject" json:"TechnicalObject,omitempty" toml:"TechnicalObject" yaml:"TechnicalObject,omitempty"`
	Plant                         null.String `boil:"Plant" json:"Plant,omitempty" toml:"Plant" yaml:"Plant,omitempty"`
	EngineeringChangeDocument     null.String `boil:"EngineeringChangeDocument" json:"EngineeringChangeDocument,omitempty" toml:"EngineeringChangeDocument" yaml:"EngineeringChangeDocument,omitempty"`
	BillOfMaterialVariantUsage    null.String `boil:"BillOfMaterialVariantUsage" json:"BillOfMaterialVariantUsage,omitempty" toml:"BillOfMaterialVariantUsage" yaml:"BillOfMaterialVariantUsage,omitempty"`
	BillOfMaterialItemNodeNumber  null.String `boil:"BillOfMaterialItemNodeNumber" json:"BillOfMaterialItemNodeNumber,omitempty" toml:"BillOfMaterialItemNodeNumber" yaml:"BillOfMaterialItemNodeNumber,omitempty"`
	BOMItemInternalChangeCount    null.String `boil:"BOMItemInternalChangeCount" json:"BOMItemInternalChangeCount,omitempty" toml:"BOMItemInternalChangeCount" yaml:"BOMItemInternalChangeCount,omitempty"`
	ValidityStartDate             null.String `boil:"ValidityStartDate" json:"ValidityStartDate,omitempty" toml:"ValidityStartDate" yaml:"ValidityStartDate,omitempty"`
	ValidityEndDate               null.String `boil:"ValidityEndDate" json:"ValidityEndDate,omitempty" toml:"ValidityEndDate" yaml:"ValidityEndDate,omitempty"`
	ChgToEngineeringChgDocument   null.String `boil:"ChgToEngineeringChgDocument" json:"ChgToEngineeringChgDocument,omitempty" toml:"ChgToEngineeringChgDocument" yaml:"ChgToEngineeringChgDocument,omitempty"`
	InheritedNodeNumberForBOMItem null.String `boil:"InheritedNodeNumberForBOMItem" json:"InheritedNodeNumberForBOMItem,omitempty" toml:"InheritedNodeNumberForBOMItem" yaml:"InheritedNodeNumberForBOMItem,omitempty"`
	BOMItemRecordCreationDate     null.String `boil:"BOMItemRecordCreationDate" json:"BOMItemRecordCreationDate,omitempty" toml:"BOMItemRecordCreationDate" yaml:"BOMItemRecordCreationDate,omitempty"`
	BOMItemLastChangeDate         null.String `boil:"BOMItemLastChangeDate" json:"BOMItemLastChangeDate,omitempty" toml:"BOMItemLastChangeDate" yaml:"BOMItemLastChangeDate,omitempty"`
	BillOfMaterialComponent       null.String `boil:"BillOfMaterialComponent" json:"BillOfMaterialComponent,omitempty" toml:"BillOfMaterialComponent" yaml:"BillOfMaterialComponent,omitempty"`
	BillOfMaterialItemCategory    null.String `boil:"BillOfMaterialItemCategory" json:"BillOfMaterialItemCategory,omitempty" toml:"BillOfMaterialItemCategory" yaml:"BillOfMaterialItemCategory,omitempty"`
	BillOfMaterialItemNumber      null.String `boil:"BillOfMaterialItemNumber" json:"BillOfMaterialItemNumber,omitempty" toml:"BillOfMaterialItemNumber" yaml:"BillOfMaterialItemNumber,omitempty"`
	BillOfMaterialItemUnit        null.String `boil:"BillOfMaterialItemUnit" json:"BillOfMaterialItemUnit,omitempty" toml:"BillOfMaterialItemUnit" yaml:"BillOfMaterialItemUnit,omitempty"`
	BillOfMaterialItemQuantity    null.String `boil:"BillOfMaterialItemQuantity" json:"BillOfMaterialItemQuantity,omitempty" toml:"BillOfMaterialItemQuantity" yaml:"BillOfMaterialItemQuantity,omitempty"`
	IsAssembly                    null.String `boil:"IsAssembly" json:"IsAssembly,omitempty" toml:"IsAssembly" yaml:"IsAssembly,omitempty"`
	IsSubItem                     null.String `boil:"IsSubItem" json:"IsSubItem,omitempty" toml:"IsSubItem" yaml:"IsSubItem,omitempty"`
	BOMItemSorter                 null.String `boil:"BOMItemSorter" json:"BOMItemSorter,omitempty" toml:"BOMItemSorter" yaml:"BOMItemSorter,omitempty"`
	PurchasingGroup               null.String `boil:"PurchasingGroup" json:"PurchasingGroup,omitempty" toml:"PurchasingGroup" yaml:"PurchasingGroup,omitempty"`
	Currency                      null.String `boil:"Currency" json:"Currency,omitempty" toml:"Currency" yaml:"Currency,omitempty"`
	MaterialComponentPrice        null.String `boil:"MaterialComponentPrice" json:"MaterialComponentPrice,omitempty" toml:"MaterialComponentPrice" yaml:"MaterialComponentPrice,omitempty"`
	IdentifierBOMItem             null.String `boil:"IdentifierBOMItem" json:"IdentifierBOMItem,omitempty" toml:"IdentifierBOMItem" yaml:"IdentifierBOMItem,omitempty"`
	MaterialPriceUnitQty          null.String `boil:"MaterialPriceUnitQty" json:"MaterialPriceUnitQty,omitempty" toml:"MaterialPriceUnitQty" yaml:"MaterialPriceUnitQty,omitempty"`
	ComponentScrapInPercent       null.String `boil:"ComponentScrapInPercent" json:"ComponentScrapInPercent,omitempty" toml:"ComponentScrapInPercent" yaml:"ComponentScrapInPercent,omitempty"`
	OperationScrapInPercent       null.String `boil:"OperationScrapInPercent" json:"OperationScrapInPercent,omitempty" toml:"OperationScrapInPercent" yaml:"OperationScrapInPercent,omitempty"`
	IsNetScrap                    null.Bool   `boil:"IsNetScrap" json:"IsNetScrap,omitempty" toml:"IsNetScrap" yaml:"IsNetScrap,omitempty"`
	QuantityVariableSizeItem      null.String `boil:"QuantityVariableSizeItem" json:"QuantityVariableSizeItem,omitempty" toml:"QuantityVariableSizeItem" yaml:"QuantityVariableSizeItem,omitempty"`
	FormulaKey                    null.String `boil:"FormulaKey" json:"FormulaKey,omitempty" toml:"FormulaKey" yaml:"FormulaKey,omitempty"`
	ComponentDescription          null.String `boil:"ComponentDescription" json:"ComponentDescription,omitempty" toml:"ComponentDescription" yaml:"ComponentDescription,omitempty"`
	BOMItemDescription            null.String `boil:"BOMItemDescription" json:"BOMItemDescription,omitempty" toml:"BOMItemDescription" yaml:"BOMItemDescription,omitempty"`
	BOMItemText2                  null.String `boil:"BOMItemText2" json:"BOMItemText2,omitempty" toml:"BOMItemText2" yaml:"BOMItemText2,omitempty"`
	MaterialGroup                 null.String `boil:"MaterialGroup" json:"MaterialGroup,omitempty" toml:"MaterialGroup" yaml:"MaterialGroup,omitempty"`
	DocumentType                  null.String `boil:"DocumentType" json:"DocumentType,omitempty" toml:"DocumentType" yaml:"DocumentType,omitempty"`
	DocNumber                     null.String `boil:"DocNumber" json:"DocNumber,omitempty" toml:"DocNumber" yaml:"DocNumber,omitempty"`
	DocumentVersion               null.String `boil:"DocumentVersion" json:"DocumentVersion,omitempty" toml:"DocumentVersion" yaml:"DocumentVersion,omitempty"`
	DocumentPart                  null.String `boil:"DocumentPart" json:"DocumentPart,omitempty" toml:"DocumentPart" yaml:"DocumentPart,omitempty"`
	ClassNumber                   null.String `boil:"ClassNumber" json:"ClassNumber,omitempty" toml:"ClassNumber" yaml:"ClassNumber,omitempty"`
	ClassType                     null.String `boil:"ClassType" json:"ClassType,omitempty" toml:"ClassType" yaml:"ClassType,omitempty"`
	ResultingItemCategory         null.String `boil:"ResultingItemCategory" json:"ResultingItemCategory,omitempty" toml:"ResultingItemCategory" yaml:"ResultingItemCategory,omitempty"`
	DependencyObjectNumber        null.String `boil:"DependencyObjectNumber" json:"DependencyObjectNumber,omitempty" toml:"DependencyObjectNumber" yaml:"DependencyObjectNumber,omitempty"`
	ObjectType                    null.String `boil:"ObjectType" json:"ObjectType,omitempty" toml:"ObjectType" yaml:"ObjectType,omitempty"`
	IsClassificationRelevant      null.Bool   `boil:"IsClassificationRelevant" json:"IsClassificationRelevant,omitempty" toml:"IsClassificationRelevant" yaml:"IsClassificationRelevant,omitempty"`
	IsBulkMaterial                null.Bool   `boil:"IsBulkMaterial" json:"IsBulkMaterial,omitempty" toml:"IsBulkMaterial" yaml:"IsBulkMaterial,omitempty"`
	BOMItemIsSparePart            null.String `boil:"BOMItemIsSparePart" json:"BOMItemIsSparePart,omitempty" toml:"BOMItemIsSparePart" yaml:"BOMItemIsSparePart,omitempty"`
	BOMItemIsSalesRelevant        null.String `boil:"BOMItemIsSalesRelevant" json:"BOMItemIsSalesRelevant,omitempty" toml:"BOMItemIsSalesRelevant" yaml:"BOMItemIsSalesRelevant,omitempty"`
	IsProductionRelevant          null.Bool   `boil:"IsProductionRelevant" json:"IsProductionRelevant,omitempty" toml:"IsProductionRelevant" yaml:"IsProductionRelevant,omitempty"`
	BOMItemIsPlantMaintRelevant   null.Bool   `boil:"BOMItemIsPlantMaintRelevant" json:"BOMItemIsPlantMaintRelevant,omitempty" toml:"BOMItemIsPlantMaintRelevant" yaml:"BOMItemIsPlantMaintRelevant,omitempty"`
	BOMItemIsCostingRelevant      null.String `boil:"BOMItemIsCostingRelevant" json:"BOMItemIsCostingRelevant,omitempty" toml:"BOMItemIsCostingRelevant" yaml:"BOMItemIsCostingRelevant,omitempty"`
	IsEngineeringRelevant         null.Bool   `boil:"IsEngineeringRelevant" json:"IsEngineeringRelevant,omitempty" toml:"IsEngineeringRelevant" yaml:"IsEngineeringRelevant,omitempty"`
	SpecialProcurementType        null.String `boil:"SpecialProcurementType" json:"SpecialProcurementType,omitempty" toml:"SpecialProcurementType" yaml:"SpecialProcurementType,omitempty"`
	IsBOMRecursiveAllowed         null.Bool   `boil:"IsBOMRecursiveAllowed" json:"IsBOMRecursiveAllowed,omitempty" toml:"IsBOMRecursiveAllowed" yaml:"IsBOMRecursiveAllowed,omitempty"`
	OperationLeadTimeOffset       null.String `boil:"OperationLeadTimeOffset" json:"OperationLeadTimeOffset,omitempty" toml:"OperationLeadTimeOffset" yaml:"OperationLeadTimeOffset,omitempty"`
	OpsLeadTimeOffsetUnit         null.String `boil:"OpsLeadTimeOffsetUnit" json:"OpsLeadTimeOffsetUnit,omitempty" toml:"OpsLeadTimeOffsetUnit" yaml:"OpsLeadTimeOffsetUnit,omitempty"`
	IsMaterialProvision           null.String `boil:"IsMaterialProvision" json:"IsMaterialProvision,omitempty" toml:"IsMaterialProvision" yaml:"IsMaterialProvision,omitempty"`
	BOMIsRecursive                null.Bool   `boil:"BOMIsRecursive" json:"BOMIsRecursive,omitempty" toml:"BOMIsRecursive" yaml:"BOMIsRecursive,omitempty"`
	DocumentIsCreatedByCAD        null.Bool   `boil:"DocumentIsCreatedByCAD" json:"DocumentIsCreatedByCAD,omitempty" toml:"DocumentIsCreatedByCAD" yaml:"DocumentIsCreatedByCAD,omitempty"`
	DistrKeyCompConsumption       null.String `boil:"DistrKeyCompConsumption" json:"DistrKeyCompConsumption,omitempty" toml:"DistrKeyCompConsumption" yaml:"DistrKeyCompConsumption,omitempty"`
	DeliveryDurationInDays        null.String `boil:"DeliveryDurationInDays" json:"DeliveryDurationInDays,omitempty" toml:"DeliveryDurationInDays" yaml:"DeliveryDurationInDays,omitempty"`
	Creditor                      null.String `boil:"Creditor" json:"Creditor,omitempty" toml:"Creditor" yaml:"Creditor,omitempty"`
	CostElement                   null.String `boil:"CostElement" json:"CostElement,omitempty" toml:"CostElement" yaml:"CostElement,omitempty"`
	Size1                         null.String `boil:"Size1" json:"Size1,omitempty" toml:"Size1" yaml:"Size1,omitempty"`
	Size2                         null.String `boil:"Size2" json:"Size2,omitempty" toml:"Size2" yaml:"Size2,omitempty"`
	Size3                         null.String `boil:"Size3" json:"Size3,omitempty" toml:"Size3" yaml:"Size3,omitempty"`
	UnitOfMeasureForSize1To3      null.String `boil:"UnitOfMeasureForSize1To3" json:"UnitOfMeasureForSize1To3,omitempty" toml:"UnitOfMeasureForSize1To3" yaml:"UnitOfMeasureForSize1To3,omitempty"`
	GoodsReceiptDuration          null.String `boil:"GoodsReceiptDuration" json:"GoodsReceiptDuration,omitempty" toml:"GoodsReceiptDuration" yaml:"GoodsReceiptDuration,omitempty"`
	PurchasingOrganization        null.String `boil:"PurchasingOrganization" json:"PurchasingOrganization,omitempty" toml:"PurchasingOrganization" yaml:"PurchasingOrganization,omitempty"`
	RequiredComponent             null.Bool   `boil:"RequiredComponent" json:"RequiredComponent,omitempty" toml:"RequiredComponent" yaml:"RequiredComponent,omitempty"`
	MultipleSelectionAllowed      null.Bool   `boil:"MultipleSelectionAllowed" json:"MultipleSelectionAllowed,omitempty" toml:"MultipleSelectionAllowed" yaml:"MultipleSelectionAllowed,omitempty"`
	ProdOrderIssueLocation        null.String `boil:"ProdOrderIssueLocation" json:"ProdOrderIssueLocation,omitempty" toml:"ProdOrderIssueLocation" yaml:"ProdOrderIssueLocation,omitempty"`
	MaterialIsCoProduct           null.Bool   `boil:"MaterialIsCoProduct" json:"MaterialIsCoProduct,omitempty" toml:"MaterialIsCoProduct" yaml:"MaterialIsCoProduct,omitempty"`
	ExplosionType                 null.String `boil:"ExplosionType" json:"ExplosionType,omitempty" toml:"ExplosionType" yaml:"ExplosionType,omitempty"`
	AlternativeItemGroup          null.String `boil:"AlternativeItemGroup" json:"AlternativeItemGroup,omitempty" toml:"AlternativeItemGroup" yaml:"AlternativeItemGroup,omitempty"`
	FollowUpGroup                 null.String `boil:"FollowUpGroup" json:"FollowUpGroup,omitempty" toml:"FollowUpGroup" yaml:"FollowUpGroup,omitempty"`
	DiscontinuationGroup          null.String `boil:"DiscontinuationGroup" json:"DiscontinuationGroup,omitempty" toml:"DiscontinuationGroup" yaml:"DiscontinuationGroup,omitempty"`
	IsConfigurableBOM             null.String `boil:"IsConfigurableBOM" json:"IsConfigurableBOM,omitempty" toml:"IsConfigurableBOM" yaml:"IsConfigurableBOM,omitempty"`
	ReferencePoint                null.String `boil:"ReferencePoint" json:"ReferencePoint,omitempty" toml:"ReferencePoint" yaml:"ReferencePoint,omitempty"`
	LeadTimeOffset                null.String `boil:"LeadTimeOffset" json:"LeadTimeOffset,omitempty" toml:"LeadTimeOffset" yaml:"LeadTimeOffset,omitempty"`
	ProductionSupplyArea          null.String `boil:"ProductionSupplyArea" json:"ProductionSupplyArea,omitempty" toml:"ProductionSupplyArea" yaml:"ProductionSupplyArea,omitempty"`
	IsDeleted                     null.Bool   `boil:"IsDeleted" json:"IsDeleted,omitempty" toml:"IsDeleted" yaml:"IsDeleted,omitempty"`
	BillOfMaterialHeaderUUID      null.String `boil:"BillOfMaterialHeaderUUID" json:"BillOfMaterialHeaderUUID,omitempty" toml:"BillOfMaterialHeaderUUID" yaml:"BillOfMaterialHeaderUUID,omitempty"`

	R *sapMaintenanceBillOfMaterialItemDatumR `boil:"-" json:"-" toml:"-" yaml:"-"`
	L sapMaintenanceBillOfMaterialItemDatumL  `boil:"-" json:"-" toml:"-" yaml:"-"`
}

var SapMaintenanceBillOfMaterialItemDatumColumns = struct {
	BillOfMaterialItemUUID        string
	TechnicalObject               string
	Plant                         string
	EngineeringChangeDocument     string
	BillOfMaterialVariantUsage    string
	BillOfMaterialItemNodeNumber  string
	BOMItemInternalChangeCount    string
	ValidityStartDate             string
	ValidityEndDate               string
	ChgToEngineeringChgDocument   string
	InheritedNodeNumberForBOMItem string
	BOMItemRecordCreationDate     string
	BOMItemLastChangeDate         string
	BillOfMaterialComponent       string
	BillOfMaterialItemCategory    string
	BillOfMaterialItemNumber      string
	BillOfMaterialItemUnit        string
	BillOfMaterialItemQuantity    string
	IsAssembly                    string
	IsSubItem                     string
	BOMItemSorter                 string
	PurchasingGroup               string
	Currency                      string
	MaterialComponentPrice        string
	IdentifierBOMItem             string
	MaterialPriceUnitQty          string
	ComponentScrapInPercent       string
	OperationScrapInPercent       string
	IsNetScrap                    string
	QuantityVariableSizeItem      string
	FormulaKey                    string
	ComponentDescription          string
	BOMItemDescription            string
	BOMItemText2                  string
	MaterialGroup                 string
	DocumentType                  string
	DocNumber                     string
	DocumentVersion               string
	DocumentPart                  string
	ClassNumber                   string
	ClassType                     string
	ResultingItemCategory         string
	DependencyObjectNumber        string
	ObjectType                    string
	IsClassificationRelevant      string
	IsBulkMaterial                string
	BOMItemIsSparePart            string
	BOMItemIsSalesRelevant        string
	IsProductionRelevant          string
	BOMItemIsPlantMaintRelevant   string
	BOMItemIsCostingRelevant      string
	IsEngineeringRelevant         string
	SpecialProcurementType        string
	IsBOMRecursiveAllowed         string
	OperationLeadTimeOffset       string
	OpsLeadTimeOffsetUnit         string
	IsMaterialProvision           string
	BOMIsRecursive                string
	DocumentIsCreatedByCAD        string
	DistrKeyCompConsumption       string
	DeliveryDurationInDays        string
	Creditor                      string
	CostElement                   string
	Size1                         string
	Size2                         string
	Size3                         string
	UnitOfMeasureForSize1To3      string
	GoodsReceiptDuration          string
	PurchasingOrganization        string
	RequiredComponent             string
	MultipleSelectionAllowed      string
	ProdOrderIssueLocation        string
	MaterialIsCoProduct           string
	ExplosionType                 string
	AlternativeItemGroup          string
	FollowUpGroup                 string
	DiscontinuationGroup          string
	IsConfigurableBOM             string
	ReferencePoint                string
	LeadTimeOffset                string
	ProductionSupplyArea          string
	IsDeleted                     string
	BillOfMaterialHeaderUUID      string
}{
	BillOfMaterialItemUUID:        "BillOfMaterialItemUUID",
	TechnicalObject:               "TechnicalObject",
	Plant:                         "Plant",
	EngineeringChangeDocument:     "EngineeringChangeDocument",
	BillOfMaterialVariantUsage:    "BillOfMaterialVariantUsage",
	BillOfMaterialItemNodeNumber:  "BillOfMaterialItemNodeNumber",
	BOMItemInternalChangeCount:    "BOMItemInternalChangeCount",
	ValidityStartDate:             "ValidityStartDate",
	ValidityEndDate:               "ValidityEndDate",
	ChgToEngineeringChgDocument:   "ChgToEngineeringChgDocument",
	InheritedNodeNumberForBOMItem: "InheritedNodeNumberForBOMItem",
	BOMItemRecordCreationDate:     "BOMItemRecordCreationDate",
	BOMItemLastChangeDate:         "BOMItemLastChangeDate",
	BillOfMaterialComponent:       "BillOfMaterialComponent",
	BillOfMaterialItemCategory:    "BillOfMaterialItemCategory",
	BillOfMaterialItemNumber:      "BillOfMaterialItemNumber",
	BillOfMaterialItemUnit:        "BillOfMaterialItemUnit",
	BillOfMaterialItemQuantity:    "BillOfMaterialItemQuantity",
	IsAssembly:                    "IsAssembly",
	IsSubItem:                     "IsSubItem",
	BOMItemSorter:                 "BOMItemSorter",
	PurchasingGroup:               "PurchasingGroup",
	Currency:                      "Currency",
	MaterialComponentPrice:        "MaterialComponentPrice",
	IdentifierBOMItem:             "IdentifierBOMItem",
	MaterialPriceUnitQty:          "MaterialPriceUnitQty",
	ComponentScrapInPercent:       "ComponentScrapInPercent",
	OperationScrapInPercent:       "OperationScrapInPercent",
	IsNetScrap:                    "IsNetScrap",
	QuantityVariableSizeItem:      "QuantityVariableSizeItem",
	FormulaKey:                    "FormulaKey",
	ComponentDescription:          "ComponentDescription",
	BOMItemDescription:            "BOMItemDescription",
	BOMItemText2:                  "BOMItemText2",
	MaterialGroup:                 "MaterialGroup",
	DocumentType:                  "DocumentType",
	DocNumber:                     "DocNumber",
	DocumentVersion:               "DocumentVersion",
	DocumentPart:                  "DocumentPart",
	ClassNumber:                   "ClassNumber",
	ClassType:                     "ClassType",
	ResultingItemCategory:         "ResultingItemCategory",
	DependencyObjectNumber:        "DependencyObjectNumber",
	ObjectType:                    "ObjectType",
	IsClassificationRelevant:      "IsClassificationRelevant",
	IsBulkMaterial:                "IsBulkMaterial",
	BOMItemIsSparePart:            "BOMItemIsSparePart",
	BOMItemIsSalesRelevant:        "BOMItemIsSalesRelevant",
	IsProductionRelevant:          "IsProductionRelevant",
	BOMItemIsPlantMaintRelevant:   "BOMItemIsPlantMaintRelevant",
	BOMItemIsCostingRelevant:      "BOMItemIsCostingRelevant",
	IsEngineeringRelevant:         "IsEngineeringRelevant",
	SpecialProcurementType:        "SpecialProcurementType",
	IsBOMRecursiveAllowed:         "IsBOMRecursiveAllowed",
	OperationLeadTimeOffset:       "OperationLeadTimeOffset",
	OpsLeadTimeOffsetUnit:         "OpsLeadTimeOffsetUnit",
	IsMaterialProvision:           "IsMaterialProvision",
	BOMIsRecursive:                "BOMIsRecursive",
	DocumentIsCreatedByCAD:        "DocumentIsCreatedByCAD",
	DistrKeyCompConsumption:       "DistrKeyCompConsumption",
	DeliveryDurationInDays:        "DeliveryDurationInDays",
	Creditor:                      "Creditor",
	CostElement:                   "CostElement",
	Size1:                         "Size1",
	Size2:                         "Size2",
	Size3:                         "Size3",
	UnitOfMeasureForSize1To3:      "UnitOfMeasureForSize1To3",
	GoodsReceiptDuration:          "GoodsReceiptDuration",
	PurchasingOrganization:        "PurchasingOrganization",
	RequiredComponent:             "RequiredComponent",
	MultipleSelectionAllowed:      "MultipleSelectionAllowed",
	ProdOrderIssueLocation:        "ProdOrderIssueLocation",
	MaterialIsCoProduct:           "MaterialIsCoProduct",
	ExplosionType:                 "ExplosionType",
	AlternativeItemGroup:          "AlternativeItemGroup",
	FollowUpGroup:                 "FollowUpGroup",
	DiscontinuationGroup:          "DiscontinuationGroup",
	IsConfigurableBOM:             "IsConfigurableBOM",
	ReferencePoint:                "ReferencePoint",
	LeadTimeOffset:                "LeadTimeOffset",
	ProductionSupplyArea:          "ProductionSupplyArea",
	IsDeleted:                     "IsDeleted",
	BillOfMaterialHeaderUUID:      "BillOfMaterialHeaderUUID",
}

var SapMaintenanceBillOfMaterialItemDatumTableColumns = struct {
	BillOfMaterialItemUUID        string
	TechnicalObject               string
	Plant                         string
	EngineeringChangeDocument     string
	BillOfMaterialVariantUsage    string
	BillOfMaterialItemNodeNumber  string
	BOMItemInternalChangeCount    string
	ValidityStartDate             string
	ValidityEndDate               string
	ChgToEngineeringChgDocument   string
	InheritedNodeNumberForBOMItem string
	BOMItemRecordCreationDate     string
	BOMItemLastChangeDate         string
	BillOfMaterialComponent       string
	BillOfMaterialItemCategory    string
	BillOfMaterialItemNumber      string
	BillOfMaterialItemUnit        string
	BillOfMaterialItemQuantity    string
	IsAssembly                    string
	IsSubItem                     string
	BOMItemSorter                 string
	PurchasingGroup               string
	Currency                      string
	MaterialComponentPrice        string
	IdentifierBOMItem             string
	MaterialPriceUnitQty          string
	ComponentScrapInPercent       string
	OperationScrapInPercent       string
	IsNetScrap                    string
	QuantityVariableSizeItem      string
	FormulaKey                    string
	ComponentDescription          string
	BOMItemDescription            string
	BOMItemText2                  string
	MaterialGroup                 string
	DocumentType                  string
	DocNumber                     string
	DocumentVersion               string
	DocumentPart                  string
	ClassNumber                   string
	ClassType                     string
	ResultingItemCategory         string
	DependencyObjectNumber        string
	ObjectType                    string
	IsClassificationRelevant      string
	IsBulkMaterial                string
	BOMItemIsSparePart            string
	BOMItemIsSalesRelevant        string
	IsProductionRelevant          string
	BOMItemIsPlantMaintRelevant   string
	BOMItemIsCostingRelevant      string
	IsEngineeringRelevant         string
	SpecialProcurementType        string
	IsBOMRecursiveAllowed         string
	OperationLeadTimeOffset       string
	OpsLeadTimeOffsetUnit         string
	IsMaterialProvision           string
	BOMIsRecursive                string
	DocumentIsCreatedByCAD        string
	DistrKeyCompConsumption       string
	DeliveryDurationInDays        string
	Creditor                      string
	CostElement                   string
	Size1                         string
	Size2                         string
	Size3                         string
	UnitOfMeasureForSize1To3      string
	GoodsReceiptDuration          string
	PurchasingOrganization        string
	RequiredComponent             string
	MultipleSelectionAllowed      string
	ProdOrderIssueLocation        string
	MaterialIsCoProduct           string
	ExplosionType                 string
	AlternativeItemGroup          string
	FollowUpGroup                 string
	DiscontinuationGroup          string
	IsConfigurableBOM             string
	ReferencePoint                string
	LeadTimeOffset                string
	ProductionSupplyArea          string
	IsDeleted                     string
	BillOfMaterialHeaderUUID      string
}{
	BillOfMaterialItemUUID:        "sap_maintenance_bill_of_material_item_data.BillOfMaterialItemUUID",
	TechnicalObject:               "sap_maintenance_bill_of_material_item_data.TechnicalObject",
	Plant:                         "sap_maintenance_bill_of_material_item_data.Plant",
	EngineeringChangeDocument:     "sap_maintenance_bill_of_material_item_data.EngineeringChangeDocument",
	BillOfMaterialVariantUsage:    "sap_maintenance_bill_of_material_item_data.BillOfMaterialVariantUsage",
	BillOfMaterialItemNodeNumber:  "sap_maintenance_bill_of_material_item_data.BillOfMaterialItemNodeNumber",
	BOMItemInternalChangeCount:    "sap_maintenance_bill_of_material_item_data.BOMItemInternalChangeCount",
	ValidityStartDate:             "sap_maintenance_bill_of_material_item_data.ValidityStartDate",
	ValidityEndDate:               "sap_maintenance_bill_of_material_item_data.ValidityEndDate",
	ChgToEngineeringChgDocument:   "sap_maintenance_bill_of_material_item_data.ChgToEngineeringChgDocument",
	InheritedNodeNumberForBOMItem: "sap_maintenance_bill_of_material_item_data.InheritedNodeNumberForBOMItem",
	BOMItemRecordCreationDate:     "sap_maintenance_bill_of_material_item_data.BOMItemRecordCreationDate",
	BOMItemLastChangeDate:         "sap_maintenance_bill_of_material_item_data.BOMItemLastChangeDate",
	BillOfMaterialComponent:       "sap_maintenance_bill_of_material_item_data.BillOfMaterialComponent",
	BillOfMaterialItemCategory:    "sap_maintenance_bill_of_material_item_data.BillOfMaterialItemCategory",
	BillOfMaterialItemNumber:      "sap_maintenance_bill_of_material_item_data.BillOfMaterialItemNumber",
	BillOfMaterialItemUnit:        "sap_maintenance_bill_of_material_item_data.BillOfMaterialItemUnit",
	BillOfMaterialItemQuantity:    "sap_maintenance_bill_of_material_item_data.BillOfMaterialItemQuantity",
	IsAssembly:                    "sap_maintenance_bill_of_material_item_data.IsAssembly",
	IsSubItem:                     "sap_maintenance_bill_of_material_item_data.IsSubItem",
	BOMItemSorter:                 "sap_maintenance_bill_of_material_item_data.BOMItemSorter",
	PurchasingGroup:               "sap_maintenance_bill_of_material_item_data.PurchasingGroup",
	Currency:                      "sap_maintenance_bill_of_material_item_data.Currency",
	MaterialComponentPrice:        "sap_maintenance_bill_of_material_item_data.MaterialComponentPrice",
	IdentifierBOMItem:             "sap_maintenance_bill_of_material_item_data.IdentifierBOMItem",
	MaterialPriceUnitQty:          "sap_maintenance_bill_of_material_item_data.MaterialPriceUnitQty",
	ComponentScrapInPercent:       "sap_maintenance_bill_of_material_item_data.ComponentScrapInPercent",
	OperationScrapInPercent:       "sap_maintenance_bill_of_material_item_data.OperationScrapInPercent",
	IsNetScrap:                    "sap_maintenance_bill_of_material_item_data.IsNetScrap",
	QuantityVariableSizeItem:      "sap_maintenance_bill_of_material_item_data.QuantityVariableSizeItem",
	FormulaKey:                    "sap_maintenance_bill_of_material_item_data.FormulaKey",
	ComponentDescription:          "sap_maintenance_bill_of_material_item_data.ComponentDescription",
	BOMItemDescription:            "sap_maintenance_bill_of_material_item_data.BOMItemDescription",
	BOMItemText2:                  "sap_maintenance_bill_of_material_item_data.BOMItemText2",
	MaterialGroup:                 "sap_maintenance_bill_of_material_item_data.MaterialGroup",
	DocumentType:                  "sap_maintenance_bill_of_material_item_data.DocumentType",
	DocNumber:                     "sap_maintenance_bill_of_material_item_data.DocNumber",
	DocumentVersion:               "sap_maintenance_bill_of_material_item_data.DocumentVersion",
	DocumentPart:                  "sap_maintenance_bill_of_material_item_data.DocumentPart",
	ClassNumber:                   "sap_maintenance_bill_of_material_item_data.ClassNumber",
	ClassType:                     "sap_maintenance_bill_of_material_item_data.ClassType",
	ResultingItemCategory:         "sap_maintenance_bill_of_material_item_data.ResultingItemCategory",
	DependencyObjectNumber:        "sap_maintenance_bill_of_material_item_data.DependencyObjectNumber",
	ObjectType:                    "sap_maintenance_bill_of_material_item_data.ObjectType",
	IsClassificationRelevant:      "sap_maintenance_bill_of_material_item_data.IsClassificationRelevant",
	IsBulkMaterial:                "sap_maintenance_bill_of_material_item_data.IsBulkMaterial",
	BOMItemIsSparePart:            "sap_maintenance_bill_of_material_item_data.BOMItemIsSparePart",
	BOMItemIsSalesRelevant:        "sap_maintenance_bill_of_material_item_data.BOMItemIsSalesRelevant",
	IsProductionRelevant:          "sap_maintenance_bill_of_material_item_data.IsProductionRelevant",
	BOMItemIsPlantMaintRelevant:   "sap_maintenance_bill_of_material_item_data.BOMItemIsPlantMaintRelevant",
	BOMItemIsCostingRelevant:      "sap_maintenance_bill_of_material_item_data.BOMItemIsCostingRelevant",
	IsEngineeringRelevant:         "sap_maintenance_bill_of_material_item_data.IsEngineeringRelevant",
	SpecialProcurementType:        "sap_maintenance_bill_of_material_item_data.SpecialProcurementType",
	IsBOMRecursiveAllowed:         "sap_maintenance_bill_of_material_item_data.IsBOMRecursiveAllowed",
	OperationLeadTimeOffset:       "sap_maintenance_bill_of_material_item_data.OperationLeadTimeOffset",
	OpsLeadTimeOffsetUnit:         "sap_maintenance_bill_of_material_item_data.OpsLeadTimeOffsetUnit",
	IsMaterialProvision:           "sap_maintenance_bill_of_material_item_data.IsMaterialProvision",
	BOMIsRecursive:                "sap_maintenance_bill_of_material_item_data.BOMIsRecursive",
	DocumentIsCreatedByCAD:        "sap_maintenance_bill_of_material_item_data.DocumentIsCreatedByCAD",
	DistrKeyCompConsumption:       "sap_maintenance_bill_of_material_item_data.DistrKeyCompConsumption",
	DeliveryDurationInDays:        "sap_maintenance_bill_of_material_item_data.DeliveryDurationInDays",
	Creditor:                      "sap_maintenance_bill_of_material_item_data.Creditor",
	CostElement:                   "sap_maintenance_bill_of_material_item_data.CostElement",
	Size1:                         "sap_maintenance_bill_of_material_item_data.Size1",
	Size2:                         "sap_maintenance_bill_of_material_item_data.Size2",
	Size3:                         "sap_maintenance_bill_of_material_item_data.Size3",
	UnitOfMeasureForSize1To3:      "sap_maintenance_bill_of_material_item_data.UnitOfMeasureForSize1To3",
	GoodsReceiptDuration:          "sap_maintenance_bill_of_material_item_data.GoodsReceiptDuration",
	PurchasingOrganization:        "sap_maintenance_bill_of_material_item_data.PurchasingOrganization",
	RequiredComponent:             "sap_maintenance_bill_of_material_item_data.RequiredComponent",
	MultipleSelectionAllowed:      "sap_maintenance_bill_of_material_item_data.MultipleSelectionAllowed",
	ProdOrderIssueLocation:        "sap_maintenance_bill_of_material_item_data.ProdOrderIssueLocation",
	MaterialIsCoProduct:           "sap_maintenance_bill_of_material_item_data.MaterialIsCoProduct",
	ExplosionType:                 "sap_maintenance_bill_of_material_item_data.ExplosionType",
	AlternativeItemGroup:          "sap_maintenance_bill_of_material_item_data.AlternativeItemGroup",
	FollowUpGroup:                 "sap_maintenance_bill_of_material_item_data.FollowUpGroup",
	DiscontinuationGroup:          "sap_maintenance_bill_of_material_item_data.DiscontinuationGroup",
	IsConfigurableBOM:             "sap_maintenance_bill_of_material_item_data.IsConfigurableBOM",
	ReferencePoint:                "sap_maintenance_bill_of_material_item_data.ReferencePoint",
	LeadTimeOffset:                "sap_maintenance_bill_of_material_item_data.LeadTimeOffset",
	ProductionSupplyArea:          "sap_maintenance_bill_of_material_item_data.ProductionSupplyArea",
	IsDeleted:                     "sap_maintenance_bill_of_material_item_data.IsDeleted",
	BillOfMaterialHeaderUUID:      "sap_maintenance_bill_of_material_item_data.BillOfMaterialHeaderUUID",
}

// Generated where

var SapMaintenanceBillOfMaterialItemDatumWhere = struct {
	BillOfMaterialItemUUID        whereHelperstring
	TechnicalObject               whereHelpernull_String
	Plant                         whereHelpernull_String
	EngineeringChangeDocument     whereHelpernull_String
	BillOfMaterialVariantUsage    whereHelpernull_String
	BillOfMaterialItemNodeNumber  whereHelpernull_String
	BOMItemInternalChangeCount    whereHelpernull_String
	ValidityStartDate             whereHelpernull_String
	ValidityEndDate               whereHelpernull_String
	ChgToEngineeringChgDocument   whereHelpernull_String
	InheritedNodeNumberForBOMItem whereHelpernull_String
	BOMItemRecordCreationDate     whereHelpernull_String
	BOMItemLastChangeDate         whereHelpernull_String
	BillOfMaterialComponent       whereHelpernull_String
	BillOfMaterialItemCategory    whereHelpernull_String
	BillOfMaterialItemNumber      whereHelpernull_String
	BillOfMaterialItemUnit        whereHelpernull_String
	BillOfMaterialItemQuantity    whereHelpernull_String
	IsAssembly                    whereHelpernull_String
	IsSubItem                     whereHelpernull_String
	BOMItemSorter                 whereHelpernull_String
	PurchasingGroup               whereHelpernull_String
	Currency                      whereHelpernull_String
	MaterialComponentPrice        whereHelpernull_String
	IdentifierBOMItem             whereHelpernull_String
	MaterialPriceUnitQty          whereHelpernull_String
	ComponentScrapInPercent       whereHelpernull_String
	OperationScrapInPercent       whereHelpernull_String
	IsNetScrap                    whereHelpernull_Bool
	QuantityVariableSizeItem      whereHelpernull_String
	FormulaKey                    whereHelpernull_String
	ComponentDescription          whereHelpernull_String
	BOMItemDescription            whereHelpernull_String
	BOMItemText2                  whereHelpernull_String
	MaterialGroup                 whereHelpernull_String
	DocumentType                  whereHelpernull_String
	DocNumber                     whereHelpernull_String
	DocumentVersion               whereHelpernull_String
	DocumentPart                  whereHelpernull_String
	ClassNumber                   whereHelpernull_String
	ClassType                     whereHelpernull_String
	ResultingItemCategory         whereHelpernull_String
	DependencyObjectNumber        whereHelpernull_String
	ObjectType                    whereHelpernull_String
	IsClassificationRelevant      whereHelpernull_Bool
	IsBulkMaterial                whereHelpernull_Bool
	BOMItemIsSparePart            whereHelpernull_String
	BOMItemIsSalesRelevant        whereHelpernull_String
	IsProductionRelevant          whereHelpernull_Bool
	BOMItemIsPlantMaintRelevant   whereHelpernull_Bool
	BOMItemIsCostingRelevant      whereHelpernull_String
	IsEngineeringRelevant         whereHelpernull_Bool
	SpecialProcurementType        whereHelpernull_String
	IsBOMRecursiveAllowed         whereHelpernull_Bool
	OperationLeadTimeOffset       whereHelpernull_String
	OpsLeadTimeOffsetUnit         whereHelpernull_String
	IsMaterialProvision           whereHelpernull_String
	BOMIsRecursive                whereHelpernull_Bool
	DocumentIsCreatedByCAD        whereHelpernull_Bool
	DistrKeyCompConsumption       whereHelpernull_String
	DeliveryDurationInDays        whereHelpernull_String
	Creditor                      whereHelpernull_String
	CostElement                   whereHelpernull_String
	Size1                         whereHelpernull_String
	Size2                         whereHelpernull_String
	Size3                         whereHelpernull_String
	UnitOfMeasureForSize1To3      whereHelpernull_String
	GoodsReceiptDuration          whereHelpernull_String
	PurchasingOrganization        whereHelpernull_String
	RequiredComponent             whereHelpernull_Bool
	MultipleSelectionAllowed      whereHelpernull_Bool
	ProdOrderIssueLocation        whereHelpernull_String
	MaterialIsCoProduct           whereHelpernull_Bool
	ExplosionType                 whereHelpernull_String
	AlternativeItemGroup          whereHelpernull_String
	FollowUpGroup                 whereHelpernull_String
	DiscontinuationGroup          whereHelpernull_String
	IsConfigurableBOM             whereHelpernull_String
	ReferencePoint                whereHelpernull_String
	LeadTimeOffset                whereHelpernull_String
	ProductionSupplyArea          whereHelpernull_String
	IsDeleted                     whereHelpernull_Bool
	BillOfMaterialHeaderUUID      whereHelpernull_String
}{
	BillOfMaterialItemUUID:        whereHelperstring{field: "`sap_maintenance_bill_of_material_item_data`.`BillOfMaterialItemUUID`"},
	TechnicalObject:               whereHelpernull_String{field: "`sap_maintenance_bill_of_material_item_data`.`TechnicalObject`"},
	Plant:                         whereHelpernull_String{field: "`sap_maintenance_bill_of_material_item_data`.`Plant`"},
	EngineeringChangeDocument:     whereHelpernull_String{field: "`sap_maintenance_bill_of_material_item_data`.`EngineeringChangeDocument`"},
	BillOfMaterialVariantUsage:    whereHelpernull_String{field: "`sap_maintenance_bill_of_material_item_data`.`BillOfMaterialVariantUsage`"},
	BillOfMaterialItemNodeNumber:  whereHelpernull_String{field: "`sap_maintenance_bill_of_material_item_data`.`BillOfMaterialItemNodeNumber`"},
	BOMItemInternalChangeCount:    whereHelpernull_String{field: "`sap_maintenance_bill_of_material_item_data`.`BOMItemInternalChangeCount`"},
	ValidityStartDate:             whereHelpernull_String{field: "`sap_maintenance_bill_of_material_item_data`.`ValidityStartDate`"},
	ValidityEndDate:               whereHelpernull_String{field: "`sap_maintenance_bill_of_material_item_data`.`ValidityEndDate`"},
	ChgToEngineeringChgDocument:   whereHelpernull_String{field: "`sap_maintenance_bill_of_material_item_data`.`ChgToEngineeringChgDocument`"},
	InheritedNodeNumberForBOMItem: whereHelpernull_String{field: "`sap_maintenance_bill_of_material_item_data`.`InheritedNodeNumberForBOMItem`"},
	BOMItemRecordCreationDate:     whereHelpernull_String{field: "`sap_maintenance_bill_of_material_item_data`.`BOMItemRecordCreationDate`"},
	BOMItemLastChangeDate:         whereHelpernull_String{field: "`sap_maintenance_bill_of_material_item_data`.`BOMItemLastChangeDate`"},
	BillOfMaterialComponent:       whereHelpernull_String{field: "`sap_maintenance_bill_of_material_item_data`.`BillOfMaterialComponent`"},
	BillOfMaterialItemCategory:    whereHelpernull_String{field: "`sap_maintenance_bill_of_material_item_data`.`BillOfMaterialItemCategory`"},
	BillOfMaterialItemNumber:      whereHelpernull_String{field: "`sap_maintenance_bill_of_material_item_data`.`BillOfMaterialItemNumber`"},
	BillOfMaterialItemUnit:        whereHelpernull_String{field: "`sap_maintenance_bill_of_material_item_data`.`BillOfMaterialItemUnit`"},
	BillOfMaterialItemQuantity:    whereHelpernull_String{field: "`sap_maintenance_bill_of_material_item_data`.`BillOfMaterialItemQuantity`"},
	IsAssembly:                    whereHelpernull_String{field: "`sap_maintenance_bill_of_material_item_data`.`IsAssembly`"},
	IsSubItem:                     whereHelpernull_String{field: "`sap_maintenance_bill_of_material_item_data`.`IsSubItem`"},
	BOMItemSorter:                 whereHelpernull_String{field: "`sap_maintenance_bill_of_material_item_data`.`BOMItemSorter`"},
	PurchasingGroup:               whereHelpernull_String{field: "`sap_maintenance_bill_of_material_item_data`.`PurchasingGroup`"},
	Currency:                      whereHelpernull_String{field: "`sap_maintenance_bill_of_material_item_data`.`Currency`"},
	MaterialComponentPrice:        whereHelpernull_String{field: "`sap_maintenance_bill_of_material_item_data`.`MaterialComponentPrice`"},
	IdentifierBOMItem:             whereHelpernull_String{field: "`sap_maintenance_bill_of_material_item_data`.`IdentifierBOMItem`"},
	MaterialPriceUnitQty:          whereHelpernull_String{field: "`sap_maintenance_bill_of_material_item_data`.`MaterialPriceUnitQty`"},
	ComponentScrapInPercent:       whereHelpernull_String{field: "`sap_maintenance_bill_of_material_item_data`.`ComponentScrapInPercent`"},
	OperationScrapInPercent:       whereHelpernull_String{field: "`sap_maintenance_bill_of_material_item_data`.`OperationScrapInPercent`"},
	IsNetScrap:                    whereHelpernull_Bool{field: "`sap_maintenance_bill_of_material_item_data`.`IsNetScrap`"},
	QuantityVariableSizeItem:      whereHelpernull_String{field: "`sap_maintenance_bill_of_material_item_data`.`QuantityVariableSizeItem`"},
	FormulaKey:                    whereHelpernull_String{field: "`sap_maintenance_bill_of_material_item_data`.`FormulaKey`"},
	ComponentDescription:          whereHelpernull_String{field: "`sap_maintenance_bill_of_material_item_data`.`ComponentDescription`"},
	BOMItemDescription:            whereHelpernull_String{field: "`sap_maintenance_bill_of_material_item_data`.`BOMItemDescription`"},
	BOMItemText2:                  whereHelpernull_String{field: "`sap_maintenance_bill_of_material_item_data`.`BOMItemText2`"},
	MaterialGroup:                 whereHelpernull_String{field: "`sap_maintenance_bill_of_material_item_data`.`MaterialGroup`"},
	DocumentType:                  whereHelpernull_String{field: "`sap_maintenance_bill_of_material_item_data`.`DocumentType`"},
	DocNumber:                     whereHelpernull_String{field: "`sap_maintenance_bill_of_material_item_data`.`DocNumber`"},
	DocumentVersion:               whereHelpernull_String{field: "`sap_maintenance_bill_of_material_item_data`.`DocumentVersion`"},
	DocumentPart:                  whereHelpernull_String{field: "`sap_maintenance_bill_of_material_item_data`.`DocumentPart`"},
	ClassNumber:                   whereHelpernull_String{field: "`sap_maintenance_bill_of_material_item_data`.`ClassNumber`"},
	ClassType:                     whereHelpernull_String{field: "`sap_maintenance_bill_of_material_item_data`.`ClassType`"},
	ResultingItemCategory:         whereHelpernull_String{field: "`sap_maintenance_bill_of_material_item_data`.`ResultingItemCategory`"},
	DependencyObjectNumber:        whereHelpernull_String{field: "`sap_maintenance_bill_of_material_item_data`.`DependencyObjectNumber`"},
	ObjectType:                    whereHelpernull_String{field: "`sap_maintenance_bill_of_material_item_data`.`ObjectType`"},
	IsClassificationRelevant:      whereHelpernull_Bool{field: "`sap_maintenance_bill_of_material_item_data`.`IsClassificationRelevant`"},
	IsBulkMaterial:                whereHelpernull_Bool{field: "`sap_maintenance_bill_of_material_item_data`.`IsBulkMaterial`"},
	BOMItemIsSparePart:            whereHelpernull_String{field: "`sap_maintenance_bill_of_material_item_data`.`BOMItemIsSparePart`"},
	BOMItemIsSalesRelevant:        whereHelpernull_String{field: "`sap_maintenance_bill_of_material_item_data`.`BOMItemIsSalesRelevant`"},
	IsProductionRelevant:          whereHelpernull_Bool{field: "`sap_maintenance_bill_of_material_item_data`.`IsProductionRelevant`"},
	BOMItemIsPlantMaintRelevant:   whereHelpernull_Bool{field: "`sap_maintenance_bill_of_material_item_data`.`BOMItemIsPlantMaintRelevant`"},
	BOMItemIsCostingRelevant:      whereHelpernull_String{field: "`sap_maintenance_bill_of_material_item_data`.`BOMItemIsCostingRelevant`"},
	IsEngineeringRelevant:         whereHelpernull_Bool{field: "`sap_maintenance_bill_of_material_item_data`.`IsEngineeringRelevant`"},
	SpecialProcurementType:        whereHelpernull_String{field: "`sap_maintenance_bill_of_material_item_data`.`SpecialProcurementType`"},
	IsBOMRecursiveAllowed:         whereHelpernull_Bool{field: "`sap_maintenance_bill_of_material_item_data`.`IsBOMRecursiveAllowed`"},
	OperationLeadTimeOffset:       whereHelpernull_String{field: "`sap_maintenance_bill_of_material_item_data`.`OperationLeadTimeOffset`"},
	OpsLeadTimeOffsetUnit:         whereHelpernull_String{field: "`sap_maintenance_bill_of_material_item_data`.`OpsLeadTimeOffsetUnit`"},
	IsMaterialProvision:           whereHelpernull_String{field: "`sap_maintenance_bill_of_material_item_data`.`IsMaterialProvision`"},
	BOMIsRecursive:                whereHelpernull_Bool{field: "`sap_maintenance_bill_of_material_item_data`.`BOMIsRecursive`"},
	DocumentIsCreatedByCAD:        whereHelpernull_Bool{field: "`sap_maintenance_bill_of_material_item_data`.`DocumentIsCreatedByCAD`"},
	DistrKeyCompConsumption:       whereHelpernull_String{field: "`sap_maintenance_bill_of_material_item_data`.`DistrKeyCompConsumption`"},
	DeliveryDurationInDays:        whereHelpernull_String{field: "`sap_maintenance_bill_of_material_item_data`.`DeliveryDurationInDays`"},
	Creditor:                      whereHelpernull_String{field: "`sap_maintenance_bill_of_material_item_data`.`Creditor`"},
	CostElement:                   whereHelpernull_String{field: "`sap_maintenance_bill_of_material_item_data`.`CostElement`"},
	Size1:                         whereHelpernull_String{field: "`sap_maintenance_bill_of_material_item_data`.`Size1`"},
	Size2:                         whereHelpernull_String{field: "`sap_maintenance_bill_of_material_item_data`.`Size2`"},
	Size3:                         whereHelpernull_String{field: "`sap_maintenance_bill_of_material_item_data`.`Size3`"},
	UnitOfMeasureForSize1To3:      whereHelpernull_String{field: "`sap_maintenance_bill_of_material_item_data`.`UnitOfMeasureForSize1To3`"},
	GoodsReceiptDuration:          whereHelpernull_String{field: "`sap_maintenance_bill_of_material_item_data`.`GoodsReceiptDuration`"},
	PurchasingOrganization:        whereHelpernull_String{field: "`sap_maintenance_bill_of_material_item_data`.`PurchasingOrganization`"},
	RequiredComponent:             whereHelpernull_Bool{field: "`sap_maintenance_bill_of_material_item_data`.`RequiredComponent`"},
	MultipleSelectionAllowed:      whereHelpernull_Bool{field: "`sap_maintenance_bill_of_material_item_data`.`MultipleSelectionAllowed`"},
	ProdOrderIssueLocation:        whereHelpernull_String{field: "`sap_maintenance_bill_of_material_item_data`.`ProdOrderIssueLocation`"},
	MaterialIsCoProduct:           whereHelpernull_Bool{field: "`sap_maintenance_bill_of_material_item_data`.`MaterialIsCoProduct`"},
	ExplosionType:                 whereHelpernull_String{field: "`sap_maintenance_bill_of_material_item_data`.`ExplosionType`"},
	AlternativeItemGroup:          whereHelpernull_String{field: "`sap_maintenance_bill_of_material_item_data`.`AlternativeItemGroup`"},
	FollowUpGroup:                 whereHelpernull_String{field: "`sap_maintenance_bill_of_material_item_data`.`FollowUpGroup`"},
	DiscontinuationGroup:          whereHelpernull_String{field: "`sap_maintenance_bill_of_material_item_data`.`DiscontinuationGroup`"},
	IsConfigurableBOM:             whereHelpernull_String{field: "`sap_maintenance_bill_of_material_item_data`.`IsConfigurableBOM`"},
	ReferencePoint:                whereHelpernull_String{field: "`sap_maintenance_bill_of_material_item_data`.`ReferencePoint`"},
	LeadTimeOffset:                whereHelpernull_String{field: "`sap_maintenance_bill_of_material_item_data`.`LeadTimeOffset`"},
	ProductionSupplyArea:          whereHelpernull_String{field: "`sap_maintenance_bill_of_material_item_data`.`ProductionSupplyArea`"},
	IsDeleted:                     whereHelpernull_Bool{field: "`sap_maintenance_bill_of_material_item_data`.`IsDeleted`"},
	BillOfMaterialHeaderUUID:      whereHelpernull_String{field: "`sap_maintenance_bill_of_material_item_data`.`BillOfMaterialHeaderUUID`"},
}

// SapMaintenanceBillOfMaterialItemDatumRels is where relationship names are stored.
var SapMaintenanceBillOfMaterialItemDatumRels = struct {
}{}

// sapMaintenanceBillOfMaterialItemDatumR is where relationships are stored.
type sapMaintenanceBillOfMaterialItemDatumR struct {
}

// NewStruct creates a new relationship struct
func (*sapMaintenanceBillOfMaterialItemDatumR) NewStruct() *sapMaintenanceBillOfMaterialItemDatumR {
	return &sapMaintenanceBillOfMaterialItemDatumR{}
}

// sapMaintenanceBillOfMaterialItemDatumL is where Load methods for each relationship are stored.
type sapMaintenanceBillOfMaterialItemDatumL struct{}

var (
	sapMaintenanceBillOfMaterialItemDatumAllColumns            = []string{"BillOfMaterialItemUUID", "TechnicalObject", "Plant", "EngineeringChangeDocument", "BillOfMaterialVariantUsage", "BillOfMaterialItemNodeNumber", "BOMItemInternalChangeCount", "ValidityStartDate", "ValidityEndDate", "ChgToEngineeringChgDocument", "InheritedNodeNumberForBOMItem", "BOMItemRecordCreationDate", "BOMItemLastChangeDate", "BillOfMaterialComponent", "BillOfMaterialItemCategory", "BillOfMaterialItemNumber", "BillOfMaterialItemUnit", "BillOfMaterialItemQuantity", "IsAssembly", "IsSubItem", "BOMItemSorter", "PurchasingGroup", "Currency", "MaterialComponentPrice", "IdentifierBOMItem", "MaterialPriceUnitQty", "ComponentScrapInPercent", "OperationScrapInPercent", "IsNetScrap", "QuantityVariableSizeItem", "FormulaKey", "ComponentDescription", "BOMItemDescription", "BOMItemText2", "MaterialGroup", "DocumentType", "DocNumber", "DocumentVersion", "DocumentPart", "ClassNumber", "ClassType", "ResultingItemCategory", "DependencyObjectNumber", "ObjectType", "IsClassificationRelevant", "IsBulkMaterial", "BOMItemIsSparePart", "BOMItemIsSalesRelevant", "IsProductionRelevant", "BOMItemIsPlantMaintRelevant", "BOMItemIsCostingRelevant", "IsEngineeringRelevant", "SpecialProcurementType", "IsBOMRecursiveAllowed", "OperationLeadTimeOffset", "OpsLeadTimeOffsetUnit", "IsMaterialProvision", "BOMIsRecursive", "DocumentIsCreatedByCAD", "DistrKeyCompConsumption", "DeliveryDurationInDays", "Creditor", "CostElement", "Size1", "Size2", "Size3", "UnitOfMeasureForSize1To3", "GoodsReceiptDuration", "PurchasingOrganization", "RequiredComponent", "MultipleSelectionAllowed", "ProdOrderIssueLocation", "MaterialIsCoProduct", "ExplosionType", "AlternativeItemGroup", "FollowUpGroup", "DiscontinuationGroup", "IsConfigurableBOM", "ReferencePoint", "LeadTimeOffset", "ProductionSupplyArea", "IsDeleted", "BillOfMaterialHeaderUUID"}
	sapMaintenanceBillOfMaterialItemDatumColumnsWithoutDefault = []string{"BillOfMaterialItemUUID", "TechnicalObject", "Plant", "EngineeringChangeDocument", "BillOfMaterialVariantUsage", "BillOfMaterialItemNodeNumber", "BOMItemInternalChangeCount", "ValidityStartDate", "ValidityEndDate", "ChgToEngineeringChgDocument", "InheritedNodeNumberForBOMItem", "BOMItemRecordCreationDate", "BOMItemLastChangeDate", "BillOfMaterialComponent", "BillOfMaterialItemCategory", "BillOfMaterialItemNumber", "BillOfMaterialItemUnit", "BillOfMaterialItemQuantity", "IsAssembly", "IsSubItem", "BOMItemSorter", "PurchasingGroup", "Currency", "MaterialComponentPrice", "IdentifierBOMItem", "MaterialPriceUnitQty", "ComponentScrapInPercent", "OperationScrapInPercent", "IsNetScrap", "QuantityVariableSizeItem", "FormulaKey", "ComponentDescription", "BOMItemDescription", "BOMItemText2", "MaterialGroup", "DocumentType", "DocNumber", "DocumentVersion", "DocumentPart", "ClassNumber", "ClassType", "ResultingItemCategory", "DependencyObjectNumber", "ObjectType", "IsClassificationRelevant", "IsBulkMaterial", "BOMItemIsSparePart", "BOMItemIsSalesRelevant", "IsProductionRelevant", "BOMItemIsPlantMaintRelevant", "BOMItemIsCostingRelevant", "IsEngineeringRelevant", "SpecialProcurementType", "IsBOMRecursiveAllowed", "OperationLeadTimeOffset", "OpsLeadTimeOffsetUnit", "IsMaterialProvision", "BOMIsRecursive", "DocumentIsCreatedByCAD", "DistrKeyCompConsumption", "DeliveryDurationInDays", "Creditor", "CostElement", "Size1", "Size2", "Size3", "UnitOfMeasureForSize1To3", "GoodsReceiptDuration", "PurchasingOrganization", "RequiredComponent", "MultipleSelectionAllowed", "ProdOrderIssueLocation", "MaterialIsCoProduct", "ExplosionType", "AlternativeItemGroup", "FollowUpGroup", "DiscontinuationGroup", "IsConfigurableBOM", "ReferencePoint", "LeadTimeOffset", "ProductionSupplyArea", "IsDeleted", "BillOfMaterialHeaderUUID"}
	sapMaintenanceBillOfMaterialItemDatumColumnsWithDefault    = []string{}
	sapMaintenanceBillOfMaterialItemDatumPrimaryKeyColumns     = []string{"BillOfMaterialItemUUID"}
	sapMaintenanceBillOfMaterialItemDatumGeneratedColumns      = []string{}
)

type (
	// SapMaintenanceBillOfMaterialItemDatumSlice is an alias for a slice of pointers to SapMaintenanceBillOfMaterialItemDatum.
	// This should almost always be used instead of []SapMaintenanceBillOfMaterialItemDatum.
	SapMaintenanceBillOfMaterialItemDatumSlice []*SapMaintenanceBillOfMaterialItemDatum
	// SapMaintenanceBillOfMaterialItemDatumHook is the signature for custom SapMaintenanceBillOfMaterialItemDatum hook methods
	SapMaintenanceBillOfMaterialItemDatumHook func(context.Context, boil.ContextExecutor, *SapMaintenanceBillOfMaterialItemDatum) error

	sapMaintenanceBillOfMaterialItemDatumQuery struct {
		*queries.Query
	}
)

// Cache for insert, update and upsert
var (
	sapMaintenanceBillOfMaterialItemDatumType                 = reflect.TypeOf(&SapMaintenanceBillOfMaterialItemDatum{})
	sapMaintenanceBillOfMaterialItemDatumMapping              = queries.MakeStructMapping(sapMaintenanceBillOfMaterialItemDatumType)
	sapMaintenanceBillOfMaterialItemDatumPrimaryKeyMapping, _ = queries.BindMapping(sapMaintenanceBillOfMaterialItemDatumType, sapMaintenanceBillOfMaterialItemDatumMapping, sapMaintenanceBillOfMaterialItemDatumPrimaryKeyColumns)
	sapMaintenanceBillOfMaterialItemDatumInsertCacheMut       sync.RWMutex
	sapMaintenanceBillOfMaterialItemDatumInsertCache          = make(map[string]insertCache)
	sapMaintenanceBillOfMaterialItemDatumUpdateCacheMut       sync.RWMutex
	sapMaintenanceBillOfMaterialItemDatumUpdateCache          = make(map[string]updateCache)
	sapMaintenanceBillOfMaterialItemDatumUpsertCacheMut       sync.RWMutex
	sapMaintenanceBillOfMaterialItemDatumUpsertCache          = make(map[string]insertCache)
)

var (
	// Force time package dependency for automated UpdatedAt/CreatedAt.
	_ = time.Second
	// Force qmhelper dependency for where clause generation (which doesn't
	// always happen)
	_ = qmhelper.Where
)

var sapMaintenanceBillOfMaterialItemDatumAfterSelectHooks []SapMaintenanceBillOfMaterialItemDatumHook

var sapMaintenanceBillOfMaterialItemDatumBeforeInsertHooks []SapMaintenanceBillOfMaterialItemDatumHook
var sapMaintenanceBillOfMaterialItemDatumAfterInsertHooks []SapMaintenanceBillOfMaterialItemDatumHook

var sapMaintenanceBillOfMaterialItemDatumBeforeUpdateHooks []SapMaintenanceBillOfMaterialItemDatumHook
var sapMaintenanceBillOfMaterialItemDatumAfterUpdateHooks []SapMaintenanceBillOfMaterialItemDatumHook

var sapMaintenanceBillOfMaterialItemDatumBeforeDeleteHooks []SapMaintenanceBillOfMaterialItemDatumHook
var sapMaintenanceBillOfMaterialItemDatumAfterDeleteHooks []SapMaintenanceBillOfMaterialItemDatumHook

var sapMaintenanceBillOfMaterialItemDatumBeforeUpsertHooks []SapMaintenanceBillOfMaterialItemDatumHook
var sapMaintenanceBillOfMaterialItemDatumAfterUpsertHooks []SapMaintenanceBillOfMaterialItemDatumHook

// doAfterSelectHooks executes all "after Select" hooks.
func (o *SapMaintenanceBillOfMaterialItemDatum) doAfterSelectHooks(ctx context.Context, exec boil.ContextExecutor) (err error) {
	if boil.HooksAreSkipped(ctx) {
		return nil
	}

	for _, hook := range sapMaintenanceBillOfMaterialItemDatumAfterSelectHooks {
		if err := hook(ctx, exec, o); err != nil {
			return err
		}
	}

	return nil
}

// doBeforeInsertHooks executes all "before insert" hooks.
func (o *SapMaintenanceBillOfMaterialItemDatum) doBeforeInsertHooks(ctx context.Context, exec boil.ContextExecutor) (err error) {
	if boil.HooksAreSkipped(ctx) {
		return nil
	}

	for _, hook := range sapMaintenanceBillOfMaterialItemDatumBeforeInsertHooks {
		if err := hook(ctx, exec, o); err != nil {
			return err
		}
	}

	return nil
}

// doAfterInsertHooks executes all "after Insert" hooks.
func (o *SapMaintenanceBillOfMaterialItemDatum) doAfterInsertHooks(ctx context.Context, exec boil.ContextExecutor) (err error) {
	if boil.HooksAreSkipped(ctx) {
		return nil
	}

	for _, hook := range sapMaintenanceBillOfMaterialItemDatumAfterInsertHooks {
		if err := hook(ctx, exec, o); err != nil {
			return err
		}
	}

	return nil
}

// doBeforeUpdateHooks executes all "before Update" hooks.
func (o *SapMaintenanceBillOfMaterialItemDatum) doBeforeUpdateHooks(ctx context.Context, exec boil.ContextExecutor) (err error) {
	if boil.HooksAreSkipped(ctx) {
		return nil
	}

	for _, hook := range sapMaintenanceBillOfMaterialItemDatumBeforeUpdateHooks {
		if err := hook(ctx, exec, o); err != nil {
			return err
		}
	}

	return nil
}

// doAfterUpdateHooks executes all "after Update" hooks.
func (o *SapMaintenanceBillOfMaterialItemDatum) doAfterUpdateHooks(ctx context.Context, exec boil.ContextExecutor) (err error) {
	if boil.HooksAreSkipped(ctx) {
		return nil
	}

	for _, hook := range sapMaintenanceBillOfMaterialItemDatumAfterUpdateHooks {
		if err := hook(ctx, exec, o); err != nil {
			return err
		}
	}

	return nil
}

// doBeforeDeleteHooks executes all "before Delete" hooks.
func (o *SapMaintenanceBillOfMaterialItemDatum) doBeforeDeleteHooks(ctx context.Context, exec boil.ContextExecutor) (err error) {
	if boil.HooksAreSkipped(ctx) {
		return nil
	}

	for _, hook := range sapMaintenanceBillOfMaterialItemDatumBeforeDeleteHooks {
		if err := hook(ctx, exec, o); err != nil {
			return err
		}
	}

	return nil
}

// doAfterDeleteHooks executes all "after Delete" hooks.
func (o *SapMaintenanceBillOfMaterialItemDatum) doAfterDeleteHooks(ctx context.Context, exec boil.ContextExecutor) (err error) {
	if boil.HooksAreSkipped(ctx) {
		return nil
	}

	for _, hook := range sapMaintenanceBillOfMaterialItemDatumAfterDeleteHooks {
		if err := hook(ctx, exec, o); err != nil {
			return err
		}
	}

	return nil
}

// doBeforeUpsertHooks executes all "before Upsert" hooks.
func (o *SapMaintenanceBillOfMaterialItemDatum) doBeforeUpsertHooks(ctx context.Context, exec boil.ContextExecutor) (err error) {
	if boil.HooksAreSkipped(ctx) {
		return nil
	}

	for _, hook := range sapMaintenanceBillOfMaterialItemDatumBeforeUpsertHooks {
		if err := hook(ctx, exec, o); err != nil {
			return err
		}
	}

	return nil
}

// doAfterUpsertHooks executes all "after Upsert" hooks.
func (o *SapMaintenanceBillOfMaterialItemDatum) doAfterUpsertHooks(ctx context.Context, exec boil.ContextExecutor) (err error) {
	if boil.HooksAreSkipped(ctx) {
		return nil
	}

	for _, hook := range sapMaintenanceBillOfMaterialItemDatumAfterUpsertHooks {
		if err := hook(ctx, exec, o); err != nil {
			return err
		}
	}

	return nil
}

// AddSapMaintenanceBillOfMaterialItemDatumHook registers your hook function for all future operations.
func AddSapMaintenanceBillOfMaterialItemDatumHook(hookPoint boil.HookPoint, sapMaintenanceBillOfMaterialItemDatumHook SapMaintenanceBillOfMaterialItemDatumHook) {
	switch hookPoint {
	case boil.AfterSelectHook:
		sapMaintenanceBillOfMaterialItemDatumAfterSelectHooks = append(sapMaintenanceBillOfMaterialItemDatumAfterSelectHooks, sapMaintenanceBillOfMaterialItemDatumHook)
	case boil.BeforeInsertHook:
		sapMaintenanceBillOfMaterialItemDatumBeforeInsertHooks = append(sapMaintenanceBillOfMaterialItemDatumBeforeInsertHooks, sapMaintenanceBillOfMaterialItemDatumHook)
	case boil.AfterInsertHook:
		sapMaintenanceBillOfMaterialItemDatumAfterInsertHooks = append(sapMaintenanceBillOfMaterialItemDatumAfterInsertHooks, sapMaintenanceBillOfMaterialItemDatumHook)
	case boil.BeforeUpdateHook:
		sapMaintenanceBillOfMaterialItemDatumBeforeUpdateHooks = append(sapMaintenanceBillOfMaterialItemDatumBeforeUpdateHooks, sapMaintenanceBillOfMaterialItemDatumHook)
	case boil.AfterUpdateHook:
		sapMaintenanceBillOfMaterialItemDatumAfterUpdateHooks = append(sapMaintenanceBillOfMaterialItemDatumAfterUpdateHooks, sapMaintenanceBillOfMaterialItemDatumHook)
	case boil.BeforeDeleteHook:
		sapMaintenanceBillOfMaterialItemDatumBeforeDeleteHooks = append(sapMaintenanceBillOfMaterialItemDatumBeforeDeleteHooks, sapMaintenanceBillOfMaterialItemDatumHook)
	case boil.AfterDeleteHook:
		sapMaintenanceBillOfMaterialItemDatumAfterDeleteHooks = append(sapMaintenanceBillOfMaterialItemDatumAfterDeleteHooks, sapMaintenanceBillOfMaterialItemDatumHook)
	case boil.BeforeUpsertHook:
		sapMaintenanceBillOfMaterialItemDatumBeforeUpsertHooks = append(sapMaintenanceBillOfMaterialItemDatumBeforeUpsertHooks, sapMaintenanceBillOfMaterialItemDatumHook)
	case boil.AfterUpsertHook:
		sapMaintenanceBillOfMaterialItemDatumAfterUpsertHooks = append(sapMaintenanceBillOfMaterialItemDatumAfterUpsertHooks, sapMaintenanceBillOfMaterialItemDatumHook)
	}
}

// One returns a single sapMaintenanceBillOfMaterialItemDatum record from the query.
func (q sapMaintenanceBillOfMaterialItemDatumQuery) One(ctx context.Context, exec boil.ContextExecutor) (*SapMaintenanceBillOfMaterialItemDatum, error) {
	o := &SapMaintenanceBillOfMaterialItemDatum{}

	queries.SetLimit(q.Query, 1)

	err := q.Bind(ctx, exec, o)
	if err != nil {
		if errors.Cause(err) == sql.ErrNoRows {
			return nil, sql.ErrNoRows
		}
		return nil, errors.Wrap(err, "models: failed to execute a one query for sap_maintenance_bill_of_material_item_data")
	}

	if err := o.doAfterSelectHooks(ctx, exec); err != nil {
		return o, err
	}

	return o, nil
}

// All returns all SapMaintenanceBillOfMaterialItemDatum records from the query.
func (q sapMaintenanceBillOfMaterialItemDatumQuery) All(ctx context.Context, exec boil.ContextExecutor) (SapMaintenanceBillOfMaterialItemDatumSlice, error) {
	var o []*SapMaintenanceBillOfMaterialItemDatum

	err := q.Bind(ctx, exec, &o)
	if err != nil {
		return nil, errors.Wrap(err, "models: failed to assign all query results to SapMaintenanceBillOfMaterialItemDatum slice")
	}

	if len(sapMaintenanceBillOfMaterialItemDatumAfterSelectHooks) != 0 {
		for _, obj := range o {
			if err := obj.doAfterSelectHooks(ctx, exec); err != nil {
				return o, err
			}
		}
	}

	return o, nil
}

// Count returns the count of all SapMaintenanceBillOfMaterialItemDatum records in the query.
func (q sapMaintenanceBillOfMaterialItemDatumQuery) Count(ctx context.Context, exec boil.ContextExecutor) (int64, error) {
	var count int64

	queries.SetSelect(q.Query, nil)
	queries.SetCount(q.Query)

	err := q.Query.QueryRowContext(ctx, exec).Scan(&count)
	if err != nil {
		return 0, errors.Wrap(err, "models: failed to count sap_maintenance_bill_of_material_item_data rows")
	}

	return count, nil
}

// Exists checks if the row exists in the table.
func (q sapMaintenanceBillOfMaterialItemDatumQuery) Exists(ctx context.Context, exec boil.ContextExecutor) (bool, error) {
	var count int64

	queries.SetSelect(q.Query, nil)
	queries.SetCount(q.Query)
	queries.SetLimit(q.Query, 1)

	err := q.Query.QueryRowContext(ctx, exec).Scan(&count)
	if err != nil {
		return false, errors.Wrap(err, "models: failed to check if sap_maintenance_bill_of_material_item_data exists")
	}

	return count > 0, nil
}

// SapMaintenanceBillOfMaterialItemData retrieves all the records using an executor.
func SapMaintenanceBillOfMaterialItemData(mods ...qm.QueryMod) sapMaintenanceBillOfMaterialItemDatumQuery {
	mods = append(mods, qm.From("`sap_maintenance_bill_of_material_item_data`"))
	return sapMaintenanceBillOfMaterialItemDatumQuery{NewQuery(mods...)}
}

// FindSapMaintenanceBillOfMaterialItemDatum retrieves a single record by ID with an executor.
// If selectCols is empty Find will return all columns.
func FindSapMaintenanceBillOfMaterialItemDatum(ctx context.Context, exec boil.ContextExecutor, billOfMaterialItemUUID string, selectCols ...string) (*SapMaintenanceBillOfMaterialItemDatum, error) {
	sapMaintenanceBillOfMaterialItemDatumObj := &SapMaintenanceBillOfMaterialItemDatum{}

	sel := "*"
	if len(selectCols) > 0 {
		sel = strings.Join(strmangle.IdentQuoteSlice(dialect.LQ, dialect.RQ, selectCols), ",")
	}
	query := fmt.Sprintf(
		"select %s from `sap_maintenance_bill_of_material_item_data` where `BillOfMaterialItemUUID`=?", sel,
	)

	q := queries.Raw(query, billOfMaterialItemUUID)

	err := q.Bind(ctx, exec, sapMaintenanceBillOfMaterialItemDatumObj)
	if err != nil {
		if errors.Cause(err) == sql.ErrNoRows {
			return nil, sql.ErrNoRows
		}
		return nil, errors.Wrap(err, "models: unable to select from sap_maintenance_bill_of_material_item_data")
	}

	if err = sapMaintenanceBillOfMaterialItemDatumObj.doAfterSelectHooks(ctx, exec); err != nil {
		return sapMaintenanceBillOfMaterialItemDatumObj, err
	}

	return sapMaintenanceBillOfMaterialItemDatumObj, nil
}

// Insert a single record using an executor.
// See boil.Columns.InsertColumnSet documentation to understand column list inference for inserts.
func (o *SapMaintenanceBillOfMaterialItemDatum) Insert(ctx context.Context, exec boil.ContextExecutor, columns boil.Columns) error {
	if o == nil {
		return errors.New("models: no sap_maintenance_bill_of_material_item_data provided for insertion")
	}

	var err error

	if err := o.doBeforeInsertHooks(ctx, exec); err != nil {
		return err
	}

	nzDefaults := queries.NonZeroDefaultSet(sapMaintenanceBillOfMaterialItemDatumColumnsWithDefault, o)

	key := makeCacheKey(columns, nzDefaults)
	sapMaintenanceBillOfMaterialItemDatumInsertCacheMut.RLock()
	cache, cached := sapMaintenanceBillOfMaterialItemDatumInsertCache[key]
	sapMaintenanceBillOfMaterialItemDatumInsertCacheMut.RUnlock()

	if !cached {
		wl, returnColumns := columns.InsertColumnSet(
			sapMaintenanceBillOfMaterialItemDatumAllColumns,
			sapMaintenanceBillOfMaterialItemDatumColumnsWithDefault,
			sapMaintenanceBillOfMaterialItemDatumColumnsWithoutDefault,
			nzDefaults,
		)

		cache.valueMapping, err = queries.BindMapping(sapMaintenanceBillOfMaterialItemDatumType, sapMaintenanceBillOfMaterialItemDatumMapping, wl)
		if err != nil {
			return err
		}
		cache.retMapping, err = queries.BindMapping(sapMaintenanceBillOfMaterialItemDatumType, sapMaintenanceBillOfMaterialItemDatumMapping, returnColumns)
		if err != nil {
			return err
		}
		if len(wl) != 0 {
			cache.query = fmt.Sprintf("INSERT INTO `sap_maintenance_bill_of_material_item_data` (`%s`) %%sVALUES (%s)%%s", strings.Join(wl, "`,`"), strmangle.Placeholders(dialect.UseIndexPlaceholders, len(wl), 1, 1))
		} else {
			cache.query = "INSERT INTO `sap_maintenance_bill_of_material_item_data` () VALUES ()%s%s"
		}

		var queryOutput, queryReturning string

		if len(cache.retMapping) != 0 {
			cache.retQuery = fmt.Sprintf("SELECT `%s` FROM `sap_maintenance_bill_of_material_item_data` WHERE %s", strings.Join(returnColumns, "`,`"), strmangle.WhereClause("`", "`", 0, sapMaintenanceBillOfMaterialItemDatumPrimaryKeyColumns))
		}

		cache.query = fmt.Sprintf(cache.query, queryOutput, queryReturning)
	}

	value := reflect.Indirect(reflect.ValueOf(o))
	vals := queries.ValuesFromMapping(value, cache.valueMapping)

	if boil.IsDebug(ctx) {
		writer := boil.DebugWriterFrom(ctx)
		fmt.Fprintln(writer, cache.query)
		fmt.Fprintln(writer, vals)
	}
	_, err = exec.ExecContext(ctx, cache.query, vals...)

	if err != nil {
		return errors.Wrap(err, "models: unable to insert into sap_maintenance_bill_of_material_item_data")
	}

	var identifierCols []interface{}

	if len(cache.retMapping) == 0 {
		goto CacheNoHooks
	}

	identifierCols = []interface{}{
		o.BillOfMaterialItemUUID,
	}

	if boil.IsDebug(ctx) {
		writer := boil.DebugWriterFrom(ctx)
		fmt.Fprintln(writer, cache.retQuery)
		fmt.Fprintln(writer, identifierCols...)
	}
	err = exec.QueryRowContext(ctx, cache.retQuery, identifierCols...).Scan(queries.PtrsFromMapping(value, cache.retMapping)...)
	if err != nil {
		return errors.Wrap(err, "models: unable to populate default values for sap_maintenance_bill_of_material_item_data")
	}

CacheNoHooks:
	if !cached {
		sapMaintenanceBillOfMaterialItemDatumInsertCacheMut.Lock()
		sapMaintenanceBillOfMaterialItemDatumInsertCache[key] = cache
		sapMaintenanceBillOfMaterialItemDatumInsertCacheMut.Unlock()
	}

	return o.doAfterInsertHooks(ctx, exec)
}

// Update uses an executor to update the SapMaintenanceBillOfMaterialItemDatum.
// See boil.Columns.UpdateColumnSet documentation to understand column list inference for updates.
// Update does not automatically update the record in case of default values. Use .Reload() to refresh the records.
func (o *SapMaintenanceBillOfMaterialItemDatum) Update(ctx context.Context, exec boil.ContextExecutor, columns boil.Columns) (int64, error) {
	var err error
	if err = o.doBeforeUpdateHooks(ctx, exec); err != nil {
		return 0, err
	}
	key := makeCacheKey(columns, nil)
	sapMaintenanceBillOfMaterialItemDatumUpdateCacheMut.RLock()
	cache, cached := sapMaintenanceBillOfMaterialItemDatumUpdateCache[key]
	sapMaintenanceBillOfMaterialItemDatumUpdateCacheMut.RUnlock()

	if !cached {
		wl := columns.UpdateColumnSet(
			sapMaintenanceBillOfMaterialItemDatumAllColumns,
			sapMaintenanceBillOfMaterialItemDatumPrimaryKeyColumns,
		)

		if !columns.IsWhitelist() {
			wl = strmangle.SetComplement(wl, []string{"created_at"})
		}
		if len(wl) == 0 {
			return 0, errors.New("models: unable to update sap_maintenance_bill_of_material_item_data, could not build whitelist")
		}

		cache.query = fmt.Sprintf("UPDATE `sap_maintenance_bill_of_material_item_data` SET %s WHERE %s",
			strmangle.SetParamNames("`", "`", 0, wl),
			strmangle.WhereClause("`", "`", 0, sapMaintenanceBillOfMaterialItemDatumPrimaryKeyColumns),
		)
		cache.valueMapping, err = queries.BindMapping(sapMaintenanceBillOfMaterialItemDatumType, sapMaintenanceBillOfMaterialItemDatumMapping, append(wl, sapMaintenanceBillOfMaterialItemDatumPrimaryKeyColumns...))
		if err != nil {
			return 0, err
		}
	}

	values := queries.ValuesFromMapping(reflect.Indirect(reflect.ValueOf(o)), cache.valueMapping)

	if boil.IsDebug(ctx) {
		writer := boil.DebugWriterFrom(ctx)
		fmt.Fprintln(writer, cache.query)
		fmt.Fprintln(writer, values)
	}
	var result sql.Result
	result, err = exec.ExecContext(ctx, cache.query, values...)
	if err != nil {
		return 0, errors.Wrap(err, "models: unable to update sap_maintenance_bill_of_material_item_data row")
	}

	rowsAff, err := result.RowsAffected()
	if err != nil {
		return 0, errors.Wrap(err, "models: failed to get rows affected by update for sap_maintenance_bill_of_material_item_data")
	}

	if !cached {
		sapMaintenanceBillOfMaterialItemDatumUpdateCacheMut.Lock()
		sapMaintenanceBillOfMaterialItemDatumUpdateCache[key] = cache
		sapMaintenanceBillOfMaterialItemDatumUpdateCacheMut.Unlock()
	}

	return rowsAff, o.doAfterUpdateHooks(ctx, exec)
}

// UpdateAll updates all rows with the specified column values.
func (q sapMaintenanceBillOfMaterialItemDatumQuery) UpdateAll(ctx context.Context, exec boil.ContextExecutor, cols M) (int64, error) {
	queries.SetUpdate(q.Query, cols)

	result, err := q.Query.ExecContext(ctx, exec)
	if err != nil {
		return 0, errors.Wrap(err, "models: unable to update all for sap_maintenance_bill_of_material_item_data")
	}

	rowsAff, err := result.RowsAffected()
	if err != nil {
		return 0, errors.Wrap(err, "models: unable to retrieve rows affected for sap_maintenance_bill_of_material_item_data")
	}

	return rowsAff, nil
}

// UpdateAll updates all rows with the specified column values, using an executor.
func (o SapMaintenanceBillOfMaterialItemDatumSlice) UpdateAll(ctx context.Context, exec boil.ContextExecutor, cols M) (int64, error) {
	ln := int64(len(o))
	if ln == 0 {
		return 0, nil
	}

	if len(cols) == 0 {
		return 0, errors.New("models: update all requires at least one column argument")
	}

	colNames := make([]string, len(cols))
	args := make([]interface{}, len(cols))

	i := 0
	for name, value := range cols {
		colNames[i] = name
		args[i] = value
		i++
	}

	// Append all of the primary key values for each column
	for _, obj := range o {
		pkeyArgs := queries.ValuesFromMapping(reflect.Indirect(reflect.ValueOf(obj)), sapMaintenanceBillOfMaterialItemDatumPrimaryKeyMapping)
		args = append(args, pkeyArgs...)
	}

	sql := fmt.Sprintf("UPDATE `sap_maintenance_bill_of_material_item_data` SET %s WHERE %s",
		strmangle.SetParamNames("`", "`", 0, colNames),
		strmangle.WhereClauseRepeated(string(dialect.LQ), string(dialect.RQ), 0, sapMaintenanceBillOfMaterialItemDatumPrimaryKeyColumns, len(o)))

	if boil.IsDebug(ctx) {
		writer := boil.DebugWriterFrom(ctx)
		fmt.Fprintln(writer, sql)
		fmt.Fprintln(writer, args...)
	}
	result, err := exec.ExecContext(ctx, sql, args...)
	if err != nil {
		return 0, errors.Wrap(err, "models: unable to update all in sapMaintenanceBillOfMaterialItemDatum slice")
	}

	rowsAff, err := result.RowsAffected()
	if err != nil {
		return 0, errors.Wrap(err, "models: unable to retrieve rows affected all in update all sapMaintenanceBillOfMaterialItemDatum")
	}
	return rowsAff, nil
}

var mySQLSapMaintenanceBillOfMaterialItemDatumUniqueColumns = []string{
	"BillOfMaterialItemUUID",
}

// Upsert attempts an insert using an executor, and does an update or ignore on conflict.
// See boil.Columns documentation for how to properly use updateColumns and insertColumns.
func (o *SapMaintenanceBillOfMaterialItemDatum) Upsert(ctx context.Context, exec boil.ContextExecutor, updateColumns, insertColumns boil.Columns) error {
	if o == nil {
		return errors.New("models: no sap_maintenance_bill_of_material_item_data provided for upsert")
	}

	if err := o.doBeforeUpsertHooks(ctx, exec); err != nil {
		return err
	}

	nzDefaults := queries.NonZeroDefaultSet(sapMaintenanceBillOfMaterialItemDatumColumnsWithDefault, o)
	nzUniques := queries.NonZeroDefaultSet(mySQLSapMaintenanceBillOfMaterialItemDatumUniqueColumns, o)

	if len(nzUniques) == 0 {
		return errors.New("cannot upsert with a table that cannot conflict on a unique column")
	}

	// Build cache key in-line uglily - mysql vs psql problems
	buf := strmangle.GetBuffer()
	buf.WriteString(strconv.Itoa(updateColumns.Kind))
	for _, c := range updateColumns.Cols {
		buf.WriteString(c)
	}
	buf.WriteByte('.')
	buf.WriteString(strconv.Itoa(insertColumns.Kind))
	for _, c := range insertColumns.Cols {
		buf.WriteString(c)
	}
	buf.WriteByte('.')
	for _, c := range nzDefaults {
		buf.WriteString(c)
	}
	buf.WriteByte('.')
	for _, c := range nzUniques {
		buf.WriteString(c)
	}
	key := buf.String()
	strmangle.PutBuffer(buf)

	sapMaintenanceBillOfMaterialItemDatumUpsertCacheMut.RLock()
	cache, cached := sapMaintenanceBillOfMaterialItemDatumUpsertCache[key]
	sapMaintenanceBillOfMaterialItemDatumUpsertCacheMut.RUnlock()

	var err error

	if !cached {
		insert, ret := insertColumns.InsertColumnSet(
			sapMaintenanceBillOfMaterialItemDatumAllColumns,
			sapMaintenanceBillOfMaterialItemDatumColumnsWithDefault,
			sapMaintenanceBillOfMaterialItemDatumColumnsWithoutDefault,
			nzDefaults,
		)

		update := updateColumns.UpdateColumnSet(
			sapMaintenanceBillOfMaterialItemDatumAllColumns,
			sapMaintenanceBillOfMaterialItemDatumPrimaryKeyColumns,
		)

		if !updateColumns.IsNone() && len(update) == 0 {
			return errors.New("models: unable to upsert sap_maintenance_bill_of_material_item_data, could not build update column list")
		}

		ret = strmangle.SetComplement(ret, nzUniques)
		cache.query = buildUpsertQueryMySQL(dialect, "`sap_maintenance_bill_of_material_item_data`", update, insert)
		cache.retQuery = fmt.Sprintf(
			"SELECT %s FROM `sap_maintenance_bill_of_material_item_data` WHERE %s",
			strings.Join(strmangle.IdentQuoteSlice(dialect.LQ, dialect.RQ, ret), ","),
			strmangle.WhereClause("`", "`", 0, nzUniques),
		)

		cache.valueMapping, err = queries.BindMapping(sapMaintenanceBillOfMaterialItemDatumType, sapMaintenanceBillOfMaterialItemDatumMapping, insert)
		if err != nil {
			return err
		}
		if len(ret) != 0 {
			cache.retMapping, err = queries.BindMapping(sapMaintenanceBillOfMaterialItemDatumType, sapMaintenanceBillOfMaterialItemDatumMapping, ret)
			if err != nil {
				return err
			}
		}
	}

	value := reflect.Indirect(reflect.ValueOf(o))
	vals := queries.ValuesFromMapping(value, cache.valueMapping)
	var returns []interface{}
	if len(cache.retMapping) != 0 {
		returns = queries.PtrsFromMapping(value, cache.retMapping)
	}

	if boil.IsDebug(ctx) {
		writer := boil.DebugWriterFrom(ctx)
		fmt.Fprintln(writer, cache.query)
		fmt.Fprintln(writer, vals)
	}
	_, err = exec.ExecContext(ctx, cache.query, vals...)

	if err != nil {
		return errors.Wrap(err, "models: unable to upsert for sap_maintenance_bill_of_material_item_data")
	}

	var uniqueMap []uint64
	var nzUniqueCols []interface{}

	if len(cache.retMapping) == 0 {
		goto CacheNoHooks
	}

	uniqueMap, err = queries.BindMapping(sapMaintenanceBillOfMaterialItemDatumType, sapMaintenanceBillOfMaterialItemDatumMapping, nzUniques)
	if err != nil {
		return errors.Wrap(err, "models: unable to retrieve unique values for sap_maintenance_bill_of_material_item_data")
	}
	nzUniqueCols = queries.ValuesFromMapping(reflect.Indirect(reflect.ValueOf(o)), uniqueMap)

	if boil.IsDebug(ctx) {
		writer := boil.DebugWriterFrom(ctx)
		fmt.Fprintln(writer, cache.retQuery)
		fmt.Fprintln(writer, nzUniqueCols...)
	}
	err = exec.QueryRowContext(ctx, cache.retQuery, nzUniqueCols...).Scan(returns...)
	if err != nil {
		return errors.Wrap(err, "models: unable to populate default values for sap_maintenance_bill_of_material_item_data")
	}

CacheNoHooks:
	if !cached {
		sapMaintenanceBillOfMaterialItemDatumUpsertCacheMut.Lock()
		sapMaintenanceBillOfMaterialItemDatumUpsertCache[key] = cache
		sapMaintenanceBillOfMaterialItemDatumUpsertCacheMut.Unlock()
	}

	return o.doAfterUpsertHooks(ctx, exec)
}

// Delete deletes a single SapMaintenanceBillOfMaterialItemDatum record with an executor.
// Delete will match against the primary key column to find the record to delete.
func (o *SapMaintenanceBillOfMaterialItemDatum) Delete(ctx context.Context, exec boil.ContextExecutor) (int64, error) {
	if o == nil {
		return 0, errors.New("models: no SapMaintenanceBillOfMaterialItemDatum provided for delete")
	}

	if err := o.doBeforeDeleteHooks(ctx, exec); err != nil {
		return 0, err
	}

	args := queries.ValuesFromMapping(reflect.Indirect(reflect.ValueOf(o)), sapMaintenanceBillOfMaterialItemDatumPrimaryKeyMapping)
	sql := "DELETE FROM `sap_maintenance_bill_of_material_item_data` WHERE `BillOfMaterialItemUUID`=?"

	if boil.IsDebug(ctx) {
		writer := boil.DebugWriterFrom(ctx)
		fmt.Fprintln(writer, sql)
		fmt.Fprintln(writer, args...)
	}
	result, err := exec.ExecContext(ctx, sql, args...)
	if err != nil {
		return 0, errors.Wrap(err, "models: unable to delete from sap_maintenance_bill_of_material_item_data")
	}

	rowsAff, err := result.RowsAffected()
	if err != nil {
		return 0, errors.Wrap(err, "models: failed to get rows affected by delete for sap_maintenance_bill_of_material_item_data")
	}

	if err := o.doAfterDeleteHooks(ctx, exec); err != nil {
		return 0, err
	}

	return rowsAff, nil
}

// DeleteAll deletes all matching rows.
func (q sapMaintenanceBillOfMaterialItemDatumQuery) DeleteAll(ctx context.Context, exec boil.ContextExecutor) (int64, error) {
	if q.Query == nil {
		return 0, errors.New("models: no sapMaintenanceBillOfMaterialItemDatumQuery provided for delete all")
	}

	queries.SetDelete(q.Query)

	result, err := q.Query.ExecContext(ctx, exec)
	if err != nil {
		return 0, errors.Wrap(err, "models: unable to delete all from sap_maintenance_bill_of_material_item_data")
	}

	rowsAff, err := result.RowsAffected()
	if err != nil {
		return 0, errors.Wrap(err, "models: failed to get rows affected by deleteall for sap_maintenance_bill_of_material_item_data")
	}

	return rowsAff, nil
}

// DeleteAll deletes all rows in the slice, using an executor.
func (o SapMaintenanceBillOfMaterialItemDatumSlice) DeleteAll(ctx context.Context, exec boil.ContextExecutor) (int64, error) {
	if len(o) == 0 {
		return 0, nil
	}

	if len(sapMaintenanceBillOfMaterialItemDatumBeforeDeleteHooks) != 0 {
		for _, obj := range o {
			if err := obj.doBeforeDeleteHooks(ctx, exec); err != nil {
				return 0, err
			}
		}
	}

	var args []interface{}
	for _, obj := range o {
		pkeyArgs := queries.ValuesFromMapping(reflect.Indirect(reflect.ValueOf(obj)), sapMaintenanceBillOfMaterialItemDatumPrimaryKeyMapping)
		args = append(args, pkeyArgs...)
	}

	sql := "DELETE FROM `sap_maintenance_bill_of_material_item_data` WHERE " +
		strmangle.WhereClauseRepeated(string(dialect.LQ), string(dialect.RQ), 0, sapMaintenanceBillOfMaterialItemDatumPrimaryKeyColumns, len(o))

	if boil.IsDebug(ctx) {
		writer := boil.DebugWriterFrom(ctx)
		fmt.Fprintln(writer, sql)
		fmt.Fprintln(writer, args)
	}
	result, err := exec.ExecContext(ctx, sql, args...)
	if err != nil {
		return 0, errors.Wrap(err, "models: unable to delete all from sapMaintenanceBillOfMaterialItemDatum slice")
	}

	rowsAff, err := result.RowsAffected()
	if err != nil {
		return 0, errors.Wrap(err, "models: failed to get rows affected by deleteall for sap_maintenance_bill_of_material_item_data")
	}

	if len(sapMaintenanceBillOfMaterialItemDatumAfterDeleteHooks) != 0 {
		for _, obj := range o {
			if err := obj.doAfterDeleteHooks(ctx, exec); err != nil {
				return 0, err
			}
		}
	}

	return rowsAff, nil
}

// Reload refetches the object from the database
// using the primary keys with an executor.
func (o *SapMaintenanceBillOfMaterialItemDatum) Reload(ctx context.Context, exec boil.ContextExecutor) error {
	ret, err := FindSapMaintenanceBillOfMaterialItemDatum(ctx, exec, o.BillOfMaterialItemUUID)
	if err != nil {
		return err
	}

	*o = *ret
	return nil
}

// ReloadAll refetches every row with matching primary key column values
// and overwrites the original object slice with the newly updated slice.
func (o *SapMaintenanceBillOfMaterialItemDatumSlice) ReloadAll(ctx context.Context, exec boil.ContextExecutor) error {
	if o == nil || len(*o) == 0 {
		return nil
	}

	slice := SapMaintenanceBillOfMaterialItemDatumSlice{}
	var args []interface{}
	for _, obj := range *o {
		pkeyArgs := queries.ValuesFromMapping(reflect.Indirect(reflect.ValueOf(obj)), sapMaintenanceBillOfMaterialItemDatumPrimaryKeyMapping)
		args = append(args, pkeyArgs...)
	}

	sql := "SELECT `sap_maintenance_bill_of_material_item_data`.* FROM `sap_maintenance_bill_of_material_item_data` WHERE " +
		strmangle.WhereClauseRepeated(string(dialect.LQ), string(dialect.RQ), 0, sapMaintenanceBillOfMaterialItemDatumPrimaryKeyColumns, len(*o))

	q := queries.Raw(sql, args...)

	err := q.Bind(ctx, exec, &slice)
	if err != nil {
		return errors.Wrap(err, "models: unable to reload all in SapMaintenanceBillOfMaterialItemDatumSlice")
	}

	*o = slice

	return nil
}

// SapMaintenanceBillOfMaterialItemDatumExists checks if the SapMaintenanceBillOfMaterialItemDatum row exists.
func SapMaintenanceBillOfMaterialItemDatumExists(ctx context.Context, exec boil.ContextExecutor, billOfMaterialItemUUID string) (bool, error) {
	var exists bool
	sql := "select exists(select 1 from `sap_maintenance_bill_of_material_item_data` where `BillOfMaterialItemUUID`=? limit 1)"

	if boil.IsDebug(ctx) {
		writer := boil.DebugWriterFrom(ctx)
		fmt.Fprintln(writer, sql)
		fmt.Fprintln(writer, billOfMaterialItemUUID)
	}
	row := exec.QueryRowContext(ctx, sql, billOfMaterialItemUUID)

	err := row.Scan(&exists)
	if err != nil {
		return false, errors.Wrap(err, "models: unable to check if sap_maintenance_bill_of_material_item_data exists")
	}

	return exists, nil
}
